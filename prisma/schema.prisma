// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id             String    @id @default(uuid())
    name           String?
    hashedPassword String?
    image          String?
    createdAt      DateTime  @default(now())
    updatedAt      DateTime  @updatedAt
    email          String?   @unique
    emailVerified  DateTime?
    role           Role      @default(USER)
    cards          Card[]
    accounts       Account[]
    Session        Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
    @@map("verificationtokens")
}

enum Role {
    ADMIN
    USER
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique @map("session_token")
    userId       String   @map("user_id")
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("sessions")
}

model Account {
    id                String  @id @default(cuid())
    userId            String  @map("user_id")
    type              String
    provider          String
    providerAccountId String  @map("provider_account_id")
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@map("accounts")
}

model Card {
    id      String  @id @default(uuid())
    name    String
    title   String?
    company String?
    imgUrl  String?
    logoUrl String?
    User    User?   @relation(fields: [userId], references: [id])
    userId  String?
    fields  Field[]

    @@index([userId])
}

model Field {
    id     String  @id @default(uuid())
    type   String
    entry  String
    link   String?
    Card   Card?   @relation(fields: [cardId], references: [id])
    cardId String?

    @@index([cardId])
}
